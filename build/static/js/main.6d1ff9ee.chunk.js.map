{"version":3,"sources":["components/Login/styles/loginStyle.js","components/Login/Validation/validation.js","components/Utils/Alert/AlertState.js","redux/authSlice/authSlice.js","components/Utils/Spinner/Spinner.js","components/Login/LoginScreen/Login.js","Services/privateApiService.js","redux/clientsSlice/clientsSlice.js","redux/casesSlice/casesSlice.js","redux/store/store.js","components/Dashboard/styles/sidebarStyles.js","components/Dashboard/SidebarScreen/Sidebar.js","components/Dashboard/styles/dateStyle.js","components/Dashboard/DateScreen/DateScreem.js","components/Dashboard/styles/viewResultsStyle.js","components/Dashboard/ViewResultsScreen/ViewResults.js","components/Dashboard/styles/headerStyle.js","components/Dashboard/HeaderScreen/Header.js","components/Dashboard/Layout/Dashboard.js","components/PrivateRoute/PrivateRoute.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","form","maxWidth","margin","title_form","textAlign","marginBottom","box_spinner","display","justifyContent","box_btn","marginTop","validationSchema","yup","email","required","password","min","sweetAlertMixin","type","text","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","concat","title","loginUser","createAsyncThunk","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","values","response","wrap","_context","prev","next","axios","post","process","sent","abrupt","data","t0","console","log","stop","_x","apply","this","arguments","userSlice","createSlice","name","initialState","token","localStorage","getItem","status","extraReducers","_extraReducers","defineProperty","pending","state","fulfilled","_ref2","payload","login_status","setItem","rejected","reducers","logOut","clear","actions","Spinner","props","react_default","createElement","esm","Login","classes","navigate","useNavigate","dispatch","useDispatch","_useSelector","useSelector","user","_useFormik","useFormik","enableReinitialize","initialValues","onSubmit","handleSubmit","handleBlur","touched","errors","handleChange","useEffect","Container","sx","className","Paper","padding","backgroundColor","elevation","Typography","variant","TextField","placeholder","onChange","onBlur","error","helperText","fullWidth","Box","Utils_Spinner_Spinner","width","heigth","Button","getAuthorizationHeader","auth","headers","authorization","getClient","clientSlice","clients","clientsSlice_extraReducers","getCases","objeto","id","desde","hasta","caseSlice","cases","casesSlice_extraReducers","results","configureStore","reducer","client","clientsSlice","case","casesSlice","drawerPaper","Sidebar","open","onClose","Drawer","drawer","paper","Toolbar","Divider","color","marginLeft","List","map","ListItem","key","theme","box_datePicker","columnGap","marginRight","breakpoints","down","DateScreem","_useState","useState","_useState2","slicedToArray","setDesde","_useState3","_useState4","setHasta","_useState5","_useState6","isDate","setIsDate","debounceRef","useRef","ide","moment","format","current","clearInterval","isAfter","setTimeout","isBefore","Fragment","Box_Box","LocalizationProvider","dateAdapter","AdapterMoment","locale","DatePicker","label","value","newValue","renderInput","params","box_view","containerList","overflowX","alignItems","tr","height","th","minWidth","whiteSpace","td","ViewResults","Table","TableHead","TableRow","TableCell","align","TableBody","last_updated","case_uuid","phone","extra_metadata","case_duration","case_result","component","scope","Today_default","fontWeight","dni","grupo","orden","GroupWork_default","is_final","container","Header","setAbrir","AppBar","IconButton","size","edge","aria-label","mr","sm","onClick","Menu_default","ExitToApp_default","Dashboard","abrir","HeaderScreen_Header","DateScreen_DateScreem","Hidden","smDown","SidebarScreen_Sidebar","smUp","ViewResultsScreen_ViewResults","PrivateRoute","children","react_router","to","createTheme","App","ThemeProvider","react_redux_es","store","react_router_dom","exact","path","element","components_PrivateRoute_PrivateRoute","Layout_Dashboard","LoginScreen_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d1ff9ee.chunk.js","sourcesContent":["import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n    form: {\r\n        maxWidth: '70%',\r\n        margin: 'auto',\r\n    },\r\n    title_form: {\r\n        textAlign: 'center',\r\n        marginBottom: '20px !important'\r\n    },\r\n    box_spinner: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    box_btn: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: '30px'\r\n    }\r\n})","import * as yup from 'yup';\r\n\r\nexport const validationSchema = yup.object({\r\n    email: yup\r\n        .string('Ingrese su email')\r\n        .email('Ingrese una dirección de email valida')\r\n        .required('Es necesario ingresa una dirección de email'),\r\n\r\n    password: yup\r\n        .string('Ingrese su contraseña')\r\n        .min(6 , 'La contraseña debe tener un mínimo de 6 caracteres')\r\n        .required('Es necesario ingresar la contraseña')\r\n})\r\n","import Swal from 'sweetalert2'\r\n\r\nexport const sweetAlertMixin = (type, text) => {\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'bottom-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        },\r\n    })\r\n\r\n    return Toast.fire({\r\n        icon: `${type}`,\r\n        title: `${text}`,\r\n    })\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\nimport { sweetAlertMixin } from '../../components/Utils/Alert/AlertState'\r\n\r\nexport const loginUser = createAsyncThunk('user/loginUser', async (values) => {\r\n    try {\r\n        const response = await axios.post(process.env.REACT_APP_API_POST_LOGIN , values)\r\n        return response.data\r\n    }\r\n    catch (err) {\r\n        console.log(err)\r\n        return sweetAlertMixin('error', 'Por favor ingrese un email o contraseña valido')\r\n    }\r\n})\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        token: localStorage.getItem('token') || \"\",\r\n        status: null\r\n    },\r\n    extraReducers: {\r\n        [loginUser.pending]: (state) => {\r\n            state.status = 'Loading'\r\n        },\r\n        [loginUser.fulfilled]: (state, { payload }) => {\r\n            if (payload.login_status === 'SUCCESS') {\r\n                state.status = 'Success'\r\n                localStorage.setItem('token', payload.token)\r\n                state.token = payload.token\r\n            }\r\n            else {\r\n                state.status = 'Failed'\r\n            }\r\n        },\r\n        [loginUser.rejected]: (state) => {\r\n            state.status = 'Failed'\r\n        }\r\n    },\r\n    reducers:{\r\n        logOut: (state) => {\r\n            localStorage.clear()\r\n            state.token = \"\"\r\n        }\r\n    }\r\n})\r\nexport const {logOut} = userSlice.actions\r\nexport default userSlice.reducer","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { TailSpin } from 'react-loader-spinner';\r\n\r\n\r\n\r\nconst Spinner = (props) => {\r\n\r\n    return (\r\n        <TailSpin  {...props} />\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect } from 'react'\r\nimport { useFormik } from 'formik'\r\nimport { useStyles } from '../styles/loginStyle'\r\nimport { validationSchema } from '../Validation/validation'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginUser } from '../../../redux/authSlice/authSlice'\r\nimport { useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Spinner from '../../Utils/Spinner/Spinner'\r\nimport { Button, Container, Paper, TextField, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\n\r\nconst Login = () => {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n    const { token, status } = useSelector(state => state.user)\r\n    const { handleSubmit, handleBlur,\r\n        touched, errors, handleChange } = useFormik({\r\n            enableReinitialize: true,\r\n            initialValues: {\r\n                email: '',\r\n                password: ''\r\n            },\r\n            validationSchema: validationSchema,\r\n            onSubmit: (values) => {\r\n                dispatch(loginUser(values))\r\n            }\r\n        })\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            navigate('/')\r\n        }\r\n    }, [token, navigate])\r\n\r\n    return (\r\n        <Container sx={{ marginTop: '25vh' }}>\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n                <Paper sx={{ padding: '40px', backgroundColor: '#DADCE2' }} elevation={5}>\r\n                    <Typography variant='h4' className={classes.title_form}>Inicie sesión</Typography>\r\n                    <TextField\r\n                        type=\"email\"\r\n                        name='email'\r\n                        sx={{ marginTop: '25px' }}\r\n                        placeholder=\"Ingrese su email\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        error={touched.email && errors.email}\r\n                        helperText={touched.email && errors.email}\r\n                        fullWidth\r\n                    />\r\n\r\n                    <TextField\r\n                        type=\"password\"\r\n                        name='password'\r\n                        sx={{ marginTop: '30px' }}\r\n                        placeholder=\"Ingrese su password\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        error={touched.password && errors.password}\r\n                        helperText={touched.password && errors.password}\r\n                        fullWidth\r\n                    />\r\n\r\n                    {status === \"Loading\" ? <Box className={classes.box_spinner}><Spinner width={30} heigth={30} /></Box> :\r\n                        <Box className={classes.box_btn}>\r\n                            <Button type=\"submit\" variant=\"contained\">Enviar</Button>\r\n                        </Box>\r\n                    }\r\n                </Paper >\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login","export const getAuthorizationHeader = () => {\r\n    const token = localStorage.getItem('token')\r\n    const auth = {\r\n        headers: {\r\n            authorization: `JWT ${token}`\r\n        }\r\n    }\r\n\r\n    return token !== null ? auth : null\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\nimport { getAuthorizationHeader } from \"../../Services/privateApiService\";\r\n\r\nexport const getClient = createAsyncThunk('client/getClient',async () => {\r\n    try{\r\n        const response = await axios(process.env.REACT_APP_API_GET_CLIENTS ,getAuthorizationHeader())\r\n        return response.data\r\n    }\r\n    catch(err) {\r\n        console.log(err)\r\n    }\r\n})\r\n\r\nconst clientSlice = createSlice({\r\n    name: 'client',\r\n    initialState: {\r\n        clients : [],\r\n        status : null\r\n    },\r\n    extraReducers: {\r\n        [getClient.pending] : (state) => {\r\n            state.status = 'Loading'\r\n        },\r\n        [getClient.fulfilled] : (state,{payload}) => {\r\n            state.status = 'Success'\r\n            state.clients = payload\r\n        },\r\n        [getClient.rejected]: (state) => {\r\n            state.status = 'Failed'\r\n        }\r\n    }\r\n})\r\n\r\nexport default clientSlice.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\nimport { getAuthorizationHeader } from \"../../Services/privateApiService\";\r\n\r\nexport const getCases = createAsyncThunk('cases/getCases', async (objeto) => {\r\n    try {\r\n        const response = await axios(`${process.env.REACT_APP_API_GET_CASES}client=${objeto.id}&local_updated__da\r\n        te__gte=${objeto.desde}&local_updated__date__lte=${objeto.hasta}` , getAuthorizationHeader())\r\n\r\n        return response.data\r\n    }\r\n    catch (err) {\r\n        console.log(err)\r\n    }\r\n})\r\n\r\nconst caseSlice = createSlice({\r\n    name: 'cases',\r\n    initialState: {\r\n        cases: [],\r\n        status: null\r\n    },\r\n    extraReducers: {\r\n        [getCases.pending]: (state) => {\r\n            state.status = 'Loading'\r\n        },\r\n        [getCases.fulfilled]: (state, { payload }) => {\r\n            state.status = 'Success'\r\n            state.cases = payload.results\r\n        },\r\n        [getCases.rejected]: (state) => {\r\n            state.status = 'Failed'\r\n        }\r\n    }\r\n})\r\n\r\nexport default caseSlice.reducer","import { configureStore } from '@reduxjs/toolkit';\r\nimport userSlice from '../authSlice/authSlice'\r\nimport clientsSlice from '../clientsSlice/clientsSlice';\r\nimport casesSlice from '../casesSlice/casesSlice';\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        user : userSlice,\r\n        client : clientsSlice,\r\n        case : casesSlice\r\n    }\r\n})","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n    /* drawer: {\r\n        width: '150px',\r\n        flexShrink: '0'\r\n    }, */\r\n    drawerPaper: {\r\n        width: '130px',\r\n        backgroundColor: '#E5E5E5 !important',\r\n    }\r\n})\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getClient } from '../../../redux/clientsSlice/clientsSlice'\r\nimport { Drawer, Typography, List, ListItem, Toolbar, Divider } from '@mui/material'\r\nimport { useStyles } from '../styles/sidebarStyles'\r\n\r\nconst Sidebar = ({ variant, open, onClose }) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const { clients } = useSelector(state => state.client)\r\n    useEffect(() => {\r\n\r\n        dispatch(getClient())\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            sx={{ backgroundColor: '#E5E5E5' }}\r\n            variant={variant}\r\n            open={open}\r\n            onClose={onClose ? onClose : null}\r\n            classes={{ paper: classes.drawerPaper }}\r\n\r\n        >\r\n            <Toolbar />\r\n            <Divider />\r\n            <Typography variant=\"h6\" color=\"initial\" sx={{ marginLeft: '15px' }}>Cliente</Typography>\r\n            <List>\r\n                {clients.map(({ name, id }) => (\r\n                    <ListItem key={id}>\r\n                        <Typography color=\"initial\">{name}</Typography>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme)=>({\r\n    box_datePicker : {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        columnGap : '10px',\r\n        marginRight: '10px',\r\n        marginTop: '15px',\r\n        [theme.breakpoints.down('sm')]:{\r\n            marginRight: '0px',\r\n        },\r\n    },\r\n}))","import React, { useEffect, useState, useRef } from 'react'\r\nimport moment from 'moment';\r\nimport TextField from '@mui/material/TextField';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { useStyles } from '../styles/dateStyle';\r\nimport { Box } from '@mui/material'\r\nimport { getCases } from '../../../redux/casesSlice/casesSlice';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport AdapterMoment from \"@mui/lab/AdapterMoment\";\r\nimport { sweetAlertMixin } from '../../Utils/Alert/AlertState';\r\nimport \"moment/locale/es\"\r\n\r\n\r\nconst DateScreem = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const { clients } = useSelector(state => state.client)\r\n    const [desde, setDesde] = useState(null);\r\n    const [hasta, setHasta] = useState(null);\r\n    const [isDate, setIsDate] = useState(false)\r\n    const debounceRef = useRef();\r\n    const ide = clients[0]\r\n\r\n    const obtainCases = () => {\r\n        if (debounceRef.current) {\r\n            clearInterval(debounceRef.current);\r\n        }\r\n        if ((isDate) && (moment(hasta).isAfter(desde))) {\r\n            debounceRef.current = setTimeout(() => {\r\n                dispatch(getCases({ id: ide.id, desde, hasta }))\r\n            }, 500)\r\n        }\r\n        else if (((isDate) && (moment(hasta).isBefore(desde)))) {\r\n            return sweetAlertMixin('error', 'La fecha desde debe ser mayor o igual a hasta')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ((desde && hasta) !== null) {\r\n            setDesde(moment(desde).format('YYYY-MM-DD'))\r\n            setHasta(moment(hasta).format('YYYY-MM-DD'))\r\n            setIsDate(true)\r\n        }\r\n    }, [desde, hasta])\r\n\r\n    useEffect(() => {\r\n        obtainCases()\r\n    }, [desde, hasta, isDate, dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.box_datePicker}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} locale='es' >\r\n                    <DatePicker\r\n                        label='Desde'\r\n                        value={desde}\r\n                        onChange={(newValue) => {\r\n                            setDesde(newValue);\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                </LocalizationProvider>\r\n\r\n                <LocalizationProvider dateAdapter={AdapterMoment} locale='es' >\r\n                    <DatePicker\r\n                        label='Hasta'\r\n                        value={hasta}\r\n                        onChange={(newValue) => {\r\n                            setHasta(newValue);\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                </LocalizationProvider>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DateScreem","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles((theme)=>({\r\n    box_view: {\r\n        width: 'calc(100% - 130px)',\r\n        marginLeft: '125px',\r\n        [theme.breakpoints.down('sm')]:{\r\n            marginLeft: '60px'\r\n        },\r\n    },\r\n    containerList: {\r\n        overflowX: 'auto',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        marginTop: '15px',\r\n        padding: '10px',\r\n        margin: '10px'\r\n    },\r\n    box_spinner: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    tr: {\r\n        height: '40px !important'\r\n    },\r\n    th: {\r\n        maxWidth: '125px',\r\n        minWidth: '125px',\r\n        padding: '0 !important',\r\n        overflowX: 'auto',\r\n        whiteSpace: 'nowrap',\r\n        textAlign: 'center !important',\r\n    },\r\n    td: {\r\n        height: '80px !important',\r\n        padding: '5px !important',\r\n        textAlign: 'center !important',\r\n    },\r\n}))","import React from 'react'\r\nimport { Table, TableCell, TableHead, TableRow, TableBody, Paper } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport { useStyles } from '../styles/viewResultsStyle'\r\nimport TodayIcon from '@mui/icons-material/Today';\r\nimport GroupWorkIcon from '@mui/icons-material/GroupWork';\r\nimport Spinner from '../../Utils/Spinner/Spinner'\r\n\r\nconst ViewResults = () => {\r\n    const classes = useStyles()\r\n    const { cases, status } = useSelector(state => state.case)\r\n\r\n    return (\r\n        <Paper className={classes.containerList}>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow className={classes.tr}>\r\n                        <TableCell className={classes.th} align=\"left\">Gestionado</TableCell>\r\n                        <TableCell className={classes.th} align=\"left\">ID Caso</TableCell>\r\n                        <TableCell className={classes.th} align=\"left\">Telefono</TableCell>\r\n                        <TableCell className={classes.th} align=\"left\">Dni</TableCell>\r\n                        <TableCell className={classes.th} align=\"left\">Grupo</TableCell>\r\n                        <TableCell className={classes.th} align=\"left\">Orden</TableCell>\r\n                        <TableCell className={classes.th} align=\"left\">Llamada</TableCell>\r\n                        <TableCell className={classes.th} align=\"left\">Estado</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {status === 'Loading' ? <Spinner className={classes.box_spinner} /> : cases.map(({ id, last_updated, case_uuid, phone, extra_metadata, case_duration, case_result }) => (\r\n                        <TableRow\r\n                            className={classes.tr}\r\n                            key={id}\r\n                        >\r\n                            <TableCell className={classes.td}  component=\"th\" scope=\"row\" sx={{ display: 'flex', alignItems: 'center', color: 'red' }} >\r\n                                <TodayIcon sx={{ color: '#AC0202' }} />\r\n                                {last_updated}\r\n                            </TableCell>\r\n\r\n                            <TableCell className={classes.td} sx={{ color: '#274698' }}>\r\n                                {case_uuid}\r\n                            </TableCell>\r\n\r\n                            <TableCell className={classes.td} sx={{ fontWeight: 'bold', color: '#274698' }}  >\r\n                                {phone}\r\n                            </TableCell>\r\n\r\n                            <TableCell className={classes.td} sx={{ color: 'red' }}>\r\n                                {extra_metadata.dni}\r\n                            </TableCell>\r\n\r\n                            <TableCell className={classes.td} sx={{ color: 'red' }} >\r\n                                {extra_metadata.grupo}\r\n                            </TableCell>\r\n\r\n                            <TableCell className={classes.td} sx={{ color: 'red' }} >\r\n                                {extra_metadata.orden}\r\n                            </TableCell>\r\n\r\n                            <TableCell className={classes.td} sx={{ display: 'flex', alignItems: 'center', color: 'red' }}>\r\n                                <GroupWorkIcon sx={{ color: '#AC0202' }} />\r\n                                {case_duration}\r\n                            </TableCell>\r\n\r\n                            <TableCell className={classes.td} sx={case_result.is_final === false ? { backgroundColor: '#E9C1C1' } : { backgroundColor: '#E1EEFD' }}>\r\n                                {case_result.name}\r\n                            </TableCell>\r\n\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper >\r\n    )\r\n}\r\n\r\nexport default ViewResults","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        width: 'calc(100% - 130px)',\r\n        marginLeft: '130px'\r\n    }\r\n})","import React from 'react'\r\nimport { Box, AppBar, Toolbar, IconButton, Button } from '@mui/material'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\r\nimport { logOut } from '../../../redux/authSlice/authSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useStyles } from '../styles/headerStyle';\r\n\r\nconst Header = ({ setAbrir }) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n            <AppBar\r\n                position=\"static\"\r\n                sx={{ backgroundColor: '#AC0202' }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        sx={{ mr: 2, display: { sm: 'none' } }}\r\n                        onClick={() => setAbrir()}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Box className={classes.container}>\r\n                        <Button\r\n                            color=\"inherit\"\r\n                            onClick={() => dispatch(logOut())}\r\n\r\n                        >\r\n                            <ExitToAppIcon sx={{ marginRight: '5px' }} />\r\n                            Log out\r\n                        </Button>\r\n                    </Box>\r\n\r\n\r\n\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react'\r\nimport Sidebar from '../SidebarScreen/Sidebar'\r\nimport DateScreem from '../DateScreen/DateScreem'\r\nimport ViewResults from '../ViewResultsScreen/ViewResults'\r\nimport { useStyles } from '../styles/viewResultsStyle'\r\nimport { Box, Hidden } from '@mui/material'\r\nimport Header from '../HeaderScreen/Header'\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles()\r\n    const [abrir, setAbrir] = useState(false)\r\n    return (\r\n        <>\r\n            <Header setAbrir={() => setAbrir(!abrir)} />\r\n            <DateScreem />\r\n\r\n            <Box sx={{ display: \"flex\" }}>\r\n                <Hidden smDown>\r\n                    <Sidebar variant=\"permanent\" open={true} />\r\n                </Hidden>\r\n\r\n                <Hidden smUp>\r\n                    <Sidebar variant=\"temporary\" open={abrir} onClose={() => setAbrir(!abrir)} />\r\n                </Hidden>\r\n\r\n                <Box className={classes.box_view}>\r\n                    <ViewResults />\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n    const {token} = useSelector(state => state.user)\r\n\r\n    return token !== \"\" ? children : <Navigate to=\"/login\" />;\r\n\r\n}\r\nexport default PrivateRoute","import { createTheme } from '@mui/material/styles'\r\n\r\nexport const theme = createTheme({\r\n    \r\n})","import React from 'react'\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\r\nimport Login from './components/Login/LoginScreen/Login'\r\nimport store from './redux/store/store'\r\nimport { Provider } from 'react-redux'\r\nimport Dashboard from './components/Dashboard/Layout/Dashboard'\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute'\r\nimport { ThemeProvider } from '@mui/material'\r\nimport {theme} from './theme'\r\n\r\nconst App = () => {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Routes>\r\n                    <Route exact path='/' element={\r\n                        <PrivateRoute>\r\n                            <Dashboard />\r\n                        </PrivateRoute>\r\n                    }\r\n                    />\r\n                    <Route exact path='/login' element={ <Login/> } />\r\n                </Routes>\r\n            </BrowserRouter>\r\n        </Provider>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"babel-polyfill\";\nimport \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport './style.css'\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}